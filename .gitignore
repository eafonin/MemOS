# MemOS home
.memos/

# Claude Code and IDE files
.claude/
.code/
*-summary.md
DOCS.md

# Debug agents - ignore venvs but keep agent code
debug-agents/*/venv/
debug-agents/*/__pycache__/

# Processed documentation
docs/processed/
/docs/processed

# Docker development environment
docker-dev/

# Docker test1 environment - ignore runtime data, keep rebuild files
docker-test1/data/
docker-test1/logs/
docker-test1/*_SUMMARY.md
docker-test1/*_TROUBLESHOOTING.md
docker-test1/CONFIG_REFERENCE.md
docker-test1/FEATURE_FLAGS_REFERENCE.md
docker-test1/NETWORK_TROUBLESHOOTING.md
docker-test1/.env

# Temporary files
tmp/
**/tmp_data/

# evaluation data
*.csv
*.jsonl
**settings.json**
evaluation/*tmp/
evaluation/results
evaluation/.env
!evaluation/configs-example/*.json
evaluation/configs/*
**tree_textual_memory_locomo**

# memos-data-loader - ignore source data and generated docs, keep loader code
memos-data-loader/loadDataSource/
memos-data-loader/docs/processed/
memos-data-loader/*_SUMMARY.md
memos-data-loader/*_GUIDE.md
memos-data-loader/*_TESTS.md
memos-data-loader/PLAN*.md
memos-data-loader/*_CREDENTIALS.md
memos-data-loader/.env.docker-test1
memos-data-loader/.env.remote-backup
memos-data-loader/*.png
.env
evaluation/scripts/personamem

# benchmarks
benchmarks/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.run

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# ignore all office files
*.pdf
*.txt
*.docx
*.doc
*.pptx
*.xls
*.xlsx
*.json
*.pkl
*.html

# but do not ignore docs/openapi.json
!docs/openapi.json

# but do not ignore docker-test1 essential files
!docker-test1/requirements.txt
!docker-test1/constraints.txt

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# auth file
*_auth.yaml

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VSCode
.vscode*

# DS_Store
.DS_Store

# Outputs and Evaluation Results
outputs

evaluation/data/temporal_locomo
